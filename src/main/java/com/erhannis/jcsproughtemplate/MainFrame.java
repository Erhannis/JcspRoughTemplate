/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.erhannis.jcsproughtemplate;

import java.util.ArrayList;

/**
 *
 * @author erhannis
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        tfClassName = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        taVars = new javax.swing.JTextArea();
        btnGenerate = new javax.swing.JButton();
        cbAddStuff = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taResult = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(200);

        tfClassName.setText("ProcNameProcess");
        tfClassName.setToolTipText("Class name");

        taVars.setColumns(20);
        taVars.setRows(5);
        taVars.setText("commands in\ndata out");
        taVars.setToolTipText("someChannel in\\nsomeOtherChannel out");
        jScrollPane2.setViewportView(taVars);

        btnGenerate.setText("Generate");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        cbAddStuff.setText("Add timer and loop");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbAddStuff)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(tfClassName)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnGenerate)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfClassName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbAddStuff)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGenerate)
                .addContainerGap())
        );

        jSplitPane1.setLeftComponent(jPanel1);

        taResult.setColumns(20);
        taResult.setRows(5);
        jScrollPane1.setViewportView(taResult);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        generate();
    }//GEN-LAST:event_btnGenerateActionPerformed

    private void generate() {
        String className = tfClassName.getText();
        String varText = taVars.getText();
        boolean addStuff = cbAddStuff.isSelected();

        ArrayList<String[]> vars = new ArrayList<String[]>();
        String[] lines = varText.split("\n");
        for (String line : lines) {
            line = line.trim();
            if (line.isEmpty()) {
                continue;
            }
            String[] tokens = line.split("\\s");
            String name = tokens[0].trim();
            String type = tokens[1].trim();
            vars.add(new String[] {name, type});
        }

        StringBuilder result = new StringBuilder();

        result.append("public class " + className + " implements CSProcess {\n");
        for (String[] var : vars) {
            if ("in".equalsIgnoreCase(var[1])) {
                result.append("   private final AltingChannelInput " + var[0] + "In;\n");
            } else if ("out".equalsIgnoreCase(var[1])) {
                result.append("   private final ChannelOutput " + var[0] + "Out;\n");
            } else {
                System.err.println("Unknown channel type (use 'in' or 'out'): " + var[1] + "(" + var[0] + ")");
            }
        }
        result.append("\n"
                + "   public " + className + "(");
        boolean isFirst = true;
        for (String[] var : vars) {
            if (!isFirst) {
                result.append(", ");
            }
            isFirst = false;
            if ("in".equalsIgnoreCase(var[1])) {
                result.append("AltingChannelInput " + var[0] + "In");
            } else if ("out".equalsIgnoreCase(var[1])) {
                result.append("ChannelOutput " + var[0] + "Out");
            } else {
                System.err.println("Unknown channel type (use 'in' or 'out'): " + var[1] + "(" + var[0] + ")");
            }
        }
        result.append(")\n"
                + "   {\n");
        for (String[] var : vars) {
            if ("in".equalsIgnoreCase(var[1])) {
                result.append("      this." + var[0] + "In = " + var[0] + "In;\n");
            } else if ("out".equalsIgnoreCase(var[1])) {
                result.append("      this." + var[0] + "Out = " + var[0] + "Out;\n");
            } else {
                System.err.println("Unknown channel type (use 'in' or 'out'): " + var[1] + "(" + var[0] + ")");
            }
        }
        result.append("   }\n"
                + "\n"
                + "   @Override\n"
                + "   public void run()\n"
                + "   {\n");
        if (addStuff) {
            result.append("      CSTimer timer = new CSTimer();\n"
                    + "      while (true) {\n"
                    + "      }\n");
        }
        result.append("   }\n"
                + "}\n");

        taResult.setText(result.toString());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerate;
    private javax.swing.JCheckBox cbAddStuff;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea taResult;
    private javax.swing.JTextArea taVars;
    private javax.swing.JTextField tfClassName;
    // End of variables declaration//GEN-END:variables
}
